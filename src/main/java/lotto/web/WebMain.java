package lotto.web;

import lotto.domain.*;
import lotto.enums.MatchType;
import spark.ModelAndView;
import spark.template.handlebars.HandlebarsTemplateEngine;

import java.util.*;

import static spark.Spark.*;

public class WebMain {

    static final Lotto lotto = new Lotto();

    public static void main(String[] args) {
        port(8080);

        get("/", (req, res) -> render(null, "index.html"));

        post("/buyLotto", (req, res) -> {
            String inputMoney = req.queryParams("inputMoney");
            String [] manual = req.queryParams("manualNumber").split("\n");

            List<String> manualNumbers = new ArrayList<>();
            Collections.addAll(manualNumbers, manual);

            for(int i = 0; i < manual.length; i++) {
                System.out.println(manualNumbers.get(i));
            }
            Money money = new Money(Integer.parseInt(inputMoney), manual.length);

            LottoGenerator.generateLotto(lotto, manualNumbers);

            Map<String, Object> model = new HashMap<>();

            model.put("totalCount", Money.countAutoGeneratedTicket() + Money.countManualTicket());
            model.put("lotto", lotto.findLottos());

            return render(model, "show.html");
        });

        post("/matchLotto", (req, res) -> {
            String winningNumber = req.queryParams("winningNumber");
            int bonus = Integer.parseInt(req.queryParams("bonusNumber"));

            LottoMachine lottoMachine = new LottoMachine(lotto);
            GameResult gameResult = lottoMachine.playLotto(winningNumber, LottoNo.getInstance(bonus));

            Map<String, Object> model = new HashMap<>();

            model.put("three", gameResult.getLottoResults().get(MatchType.THREE));
            model.put("four", gameResult.getLottoResults().get(MatchType.FOUR));
            model.put("five", gameResult.getLottoResults().get(MatchType.FIVE));
            model.put("bonus", gameResult.getLottoResults().get(MatchType.BONUS));
            model.put("six", gameResult.getLottoResults().get(MatchType.SIX));
            model.put("benefit", gameResult.calculateBenefitRate());

            return render(model, "result.html");
        });

    }

    public static String render(Map<String, Object> model, String templatePath) {
        return new HandlebarsTemplateEngine().render(new ModelAndView(model, templatePath));
    }
}
