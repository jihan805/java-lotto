package lotto.domain;

import lotto.enums.MatchType;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.Arrays;
import java.util.Map;

public class Money {

    private static final int ROUND_SCALE = 2;
    private static final int PRICE_PER_ONE_LOTTO = 1_000;

    private static int purchaseAmount = 0;

    public Money(int purchaseAmount) {
        this.purchaseAmount = purchaseAmount;
    }

    public static BigDecimal getBenefitRate(Map<MatchType, Integer> lottoResults) {
        BigDecimal totalWinAmount = new BigDecimal(calculateTotalAmount(lottoResults));
        //BigDecimal purchaseAmount = new BigDecimal(purchaseAmount);

        return calculateBenefitRate(totalWinAmount, new BigDecimal(purchaseAmount));
    }

    static int calculateTotalAmount(Map<MatchType, Integer> lottoResults) {
        return Arrays.stream(MatchType.values())
                .mapToInt(i -> i.calculateTotalAmountForOneLotto(lottoResults.get(i)))
                .sum();
    }

    static BigDecimal calculateBenefitRate(BigDecimal totalWinAmount, BigDecimal purchaseAmount) {
        return totalWinAmount.divide(purchaseAmount, ROUND_SCALE, RoundingMode.DOWN);
    }

    public int countTicket() {
        return this.purchaseAmount / PRICE_PER_ONE_LOTTO;
    }

    public int countAutoGeneratedTicket(int ticketCount, int manualTicketCount) {
        return ticketCount - manualTicketCount;
    }

}